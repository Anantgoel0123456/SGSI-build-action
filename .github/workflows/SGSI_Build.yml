# This is a basic workflow to help you get started with Actions

name: SGSI_Build

on:
  watch:
    types: [started]
    
env:              
  ROM_URL: 'https://github.com/Stellar-OS/releases/releases/download/StellarOS-WeebEdition-1.1-Beru-20210924-OFFICIAL-cedric-1920/StellarOS-WeebEdition-1.1-Beru-20210924-OFFICIAL-cedric.zip'
  ZIP_NAME: 'StellarOS-WeebEdition-1.1-Beru-20210924-OFFICIAL-cedric.zip'
  OS_TYPE: 'Generic'
  BUILD_TYPE: 'ab'
  REPACK_NAME: 'SGSI.zip'
  VERSION: '12'
  upload_action-gh-release: 'true'
  SETUP: 'true'
  
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
       - name: Checkout
         uses: actions/checkout@main
     
           
       - name: Setting up the SPICES
         run: |
            sudo apt-get install -y git wget git zip unzip curl axel

       - name: Cloning...
         run: |
             git clone --recurse-submodules https://github.com/ShadesTools/SGSI-build-tool.git -b 12 $GITHUB_WORKSPACE/SGSI-build-tool
           
       - name: Download zip...
         run: |
            cd $GITHUB_WORKSPACE/SGSI-build-tool
            mkdir ./tmp
            wget -U "Mozilla/5.0" $ROM_URL -O "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/$ZIP_NAME"
            echo "zip_file: $(ls "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/")"
            
       - name: Setup Tool Utils...
         if: env.SETUP == 'true'
         run: |
            sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
            # sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
            java -version
            
       - name: Building AB DEVICES SGSI...
         if: env.BUILD_TYPE == 'AB' || env.BUILD_TYPE == 'ab'
         run: |
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --AB $OS_TYPE $ZIP_NAME --fix-bug

       - name: Building A-only DEVICES SGSI...
         if: env.BUILD_TYPE == 'a-only'
         run: |
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --a-only $OS_TYPE $ZIP_NAME --fix-bug     

       - name: Repack output file ...
         run: |            
             cd $GITHUB_WORKSPACE/SGSI-build-tool
             pwd
             mkdir -p upload
             zip -r $REPACK_NAME ./SGSI/*
             if [[ $(du -sb "$REPACK_NAME" | awk '{print $1}') -gt 2097152000 ]];then
                 echo -e "split packaging..."
                 tar -cpzf - "$REPACK_NAME" | split -d -b 1024m - "upload/$REPACK_NAME"
             else
                 mv $REPACK_NAME upload/$REPACK_NAME
             fi
             ls "upload"

       - name: Zip Aonly and upload 
         run: |
              mkdir final
              sudo chmod -R 777 ErfanGSIs/output
              zip -r ErfanGSIs/output/$ZIP_NAME-GSI-Aonly.7z ErfanGSIs/output/*-Aonly-*.img
              curl -sL https://git.io/file-transfer | sh
              ./transfer $MIR ErfanGSIs/output/$ZIP_NAME-GSI-Aonly.7z          
       - name: Zip AB and upload 
         run: |
              zip -r ErfanGSIs/output/$ZIP_NAME-GSI-AB.7z ErfanGSIs/output/*-AB-*.img
              ./transfer $MIR ErfanGSIs/output/$ZIP_NAME-GSI-AB.7z      
       - name: Print build info
         run: |
              cat ErfanGSIs/output/*-Aonly-*.txt
